

---
author: "Libby Smith"
format: html
editor: visual

---


# Text Mining and Sentiment Analysis with Speech Data

## Assignment 5 - Creating a Word Cloud Working with a transcribed speech by Winston Churchill

 Install the easypackages package 
```{r}

install.packages(c("easypackages","XML","wordcloud","RColorBrewer","NLP","tm","quanteda","quanteda.textstats"), repos = "http://cran.us.r-project.org")
library(XML)
library(wordcloud)
library(NLP)
library(RColorBrewer)
library(tm)
library(quanteda)
library(quanteda.textstats)
```
 


Download text data from website
```{r}
WC_speech <-URLencode("http://www.historyplace.com/speeches/churchill-hour.htm")
doc.html<- htmlTreeParse(WC_speech, useInternal=TRUE)
WCS <- unlist(xpathApply(doc.html, '//p', xmlValue))
# Parsing Paragraphs
words.vec <- VectorSource(WCS)
class(words.vec)
# Check the class of words.vec
```

Create Corpus object for preprocessing
```{r}
words.corpus <- Corpus(words.vec)
inspect(words.corpus)
```


Turn all words to lower case & Remove punctuations, numbers
```{r}
words.corpus <- tm_map(words.corpus, content_transformer(tolower))
words.corpus <- tm_map(words.corpus, removePunctuation)
words.corpus <- tm_map(words.corpus, removeNumbers)
```

Turning to stopwords, then uniform bag of words created
```{r}
words.corpus <- tm_map(words.corpus, removeWords, stopwords("english"))

```

Create Term Document Matric
```{r}
tdm <- TermDocumentMatrix(words.corpus)
inspect(tdm)
m <- as.matrix(tdm)
wordCounts <- rowSums(m)
wordCounts <- sort(wordCounts, decreasing=TRUE)
```


Create Wordcloud
```{r}
cloudFrame<-data.frame(word=names(wordCounts),freq=wordCounts)
set.seed(1234)
wordcloud(cloudFrame$word,cloudFrame$freq)
wordcloud(names(wordCounts),wordCounts, min.freq=1,random.order=FALSE, max.words=200,scale=c(4,.5), rot.per=0.35,colors=brewer.pal(8,"Dark2"))
```

N-gram with two to three words
```{r}
textstat_collocations(WCS, size = 2:3) 
```

